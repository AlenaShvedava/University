@startuml
class pl.solvd.university.state.PassExams {
+ void saveActivityInfo()
}
class pl.solvd.university.administration.Accounting {
~ {static} void exceptPayment()
~ {static} void agreement(List<Applicant>)
}
enum pl.solvd.university.administration.Bill {
+  EDUCATION
- int price
+ int getPrice()
}
class pl.solvd.university.state.SaveLoadFiles {
+ {static} void saveApplicantToFile(Applicant,String)
+ {static} void showInformationFromFile(String)
}
class pl.solvd.university.state.SeeResults {
+ void saveActivityInfo()
}
class pl.solvd.university.state.Registration {
+ void saveActivityInfo()
}
enum pl.solvd.university.departments.Speciality {
+  CONCERT_PERFORMER
+  VOCAL_SINGER
+  MUSICAL_DIRECTOR
+  CHOREOGRAPHER
~ Faculty category
~ int numOfBudgetPlaces
~ int numOfPaidPlaces
~ String exams
+ Faculty getCategory()
+ int getNumOfBudgetPlaces()
+ int getNumOfPaidPlaces()
+ String getExams()
+ Dean getDean()
}
class pl.solvd.university.Main {
+ {static} Logger LOG
+ {static} Activity activity
+ {static} Applicant applicant
+ {static} void main(String[])
- {static} void readUniversityRules()
+ {static} void checkYesNoInput(String)
+ {static} void checkLettersInput(String)
+ {static} void checkDateInput(String,String,String)
}
class pl.solvd.university.people.Professor {
+ String firstName
+ String lastName
+ {static} void consult()
+ String toString()
}
class pl.solvd.university.administration.AdmissionsOffice {
+ {static} List<Applicant> applicants
+ {static} void chooseSpeciality()
+ {static} void registration()
+ {static} void returnOfDocuments()
}
enum pl.solvd.university.departments.Faculty {
+  INSTRUMENT
+  VOCAL
+  THEATRE
+  CHOREOGRAPHY
- Dean dean
- int campus
+ void setDean(Dean)
+ Dean getDean()
+ int getCampus()
}
class pl.solvd.university.administration.ExamBoard {
+ {static} byte MIN_PASS_SCORE
+ {static} void passExam()
+ {static} ArrayList<Integer> rate()
}
class pl.solvd.university.administration.Deanery {
+ int compare(Applicant,Applicant)
+ {static} void summingUpTheResultsOfEntranceExaminations(List<Applicant>,int,int,String)
}
class pl.solvd.university.people.Student {
+ {static} void getFirstCourse(List<Applicant>)
}
interface pl.solvd.university.state.Activity {
~ File state
~ void saveActivityInfo()
}
class pl.solvd.university.documents.Pass {
- String name
+ {static} void givePassToApplicant(String)
+ {static} void takePassFromAnApplicant()
+ {static} String center(String,int,char)
+ {static} void show(Pass)
+ boolean equals(Object)
+ int hashCode()
}
class pl.solvd.university.people.Applicant {
- int id
- String firstName
- ArrayList<Integer> values
+ {static} int sum
+ Pass myPass
~ Activity activity
+ void setFirstName(String)
+ void setLastName(String)
+ void setDateOfBirth(String)
+ void setFaculty(String)
+ void setSpeciality(String)
+ void setActivity(Activity)
+ String getFirstLastName()
+ String getFaculty()
+ String getSpeciality()
+ ArrayList<Integer> getValues()
+ String getDateOfBirth()
+ int getSum()
+ void setValues()
+ String toString()
+ boolean equals(Object)
+ int hashCode()
+ void saveActivityAndApplicantInfoToStateFiles()
}
class pl.solvd.university.people.Dean {
+ {static} List<T> approve(List<T>)
}
class pl.solvd.university.state.ReturnDocuments {
+ void saveActivityInfo()
}
class pl.solvd.university.exceptions.InputException {
}
class pl.solvd.university.state.ReadRules {
+ void saveActivityInfo()
}
class pl.solvd.university.state.ChoosingSpeciality {
+ void saveActivityInfo()
}
class pl.solvd.university.state.Payment {
+ void saveActivityInfo()
}
class pl.solvd.university.documents.ExamSheet {
+ {static} ArrayList<Integer> grades
+ {static} void getGrades()
+ {static} void scoreCard()
}


pl.solvd.university.state.Activity <|.. pl.solvd.university.state.PassExams
java.io.Serializable <|.. pl.solvd.university.state.PassExams
pl.solvd.university.state.Activity <|.. pl.solvd.university.state.SeeResults
java.io.Serializable <|.. pl.solvd.university.state.SeeResults
pl.solvd.university.state.Activity <|.. pl.solvd.university.state.Registration
java.io.Serializable <|.. pl.solvd.university.state.Registration
pl.solvd.university.administration.Comparator <|.. pl.solvd.university.administration.Deanery
pl.solvd.university.people.Applicant <|-- pl.solvd.university.people.Student
java.io.Serializable <|.. pl.solvd.university.documents.Pass
java.io.Serializable <|.. pl.solvd.university.people.Applicant
pl.solvd.university.people.Professor <|-- pl.solvd.university.people.Dean
pl.solvd.university.state.Activity <|.. pl.solvd.university.state.ReturnDocuments
java.io.Serializable <|.. pl.solvd.university.state.ReturnDocuments
pl.solvd.university.exceptions.Exception <|-- pl.solvd.university.exceptions.InputException
pl.solvd.university.state.Activity <|.. pl.solvd.university.state.ReadRules
java.io.Serializable <|.. pl.solvd.university.state.ReadRules
pl.solvd.university.state.Activity <|.. pl.solvd.university.state.ChoosingSpeciality
java.io.Serializable <|.. pl.solvd.university.state.ChoosingSpeciality
pl.solvd.university.state.Activity <|.. pl.solvd.university.state.Payment
java.io.Serializable <|.. pl.solvd.university.state.Payment
@enduml